#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Попытка
		Токен             = ХранилищеОбщихНастроек.Загрузить("MRS_ЗагрузкаДанныхИзФронтСистем", "Token_LKK");
		СписокКасс        = ХранилищеОбщихНастроек.Загрузить("MRS_ЗагрузкаДанныхИзФронтСистем", "СписокККТ_LKK");
		РежимРазработчика = ХранилищеОбщихНастроек.Загрузить("MRS_ЗагрузкаДанныхИзФронтСистем", "РежимРазработчика");
	Исключение
		ВызватьИсключение "Нет прав на восстановление настроек.";
	КонецПопытки;
	
	ЗагрузитьПараметрыФормы();
	ВосстановитьНастройки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	Если Период.ДатаНачала > Период.ДатаОкончания Тогда
		Период.ДатаОкончания = КонецДня(Период.ДатаНачала);
		ПоказатьПредупреждение(, "Дата начала не может быть больше даты окончания!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФронтСистемаПриИзменении(Элемент)
	
	ОбновитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура РегНомерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыДляПередачи = Новый Структура;
	ПараметрыДляПередачи.Вставить("ВыборНескольких", Истина);
	ПараметрыДляПередачи.Вставить("СписокКасс",      СписокКасс);
	
	Оповещение = Новый ОписаниеОповещения("ВыборРегНомера", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.MRS_ЗагрузкаДанныхИзФронтСистем.Форма.СписокККТ",
		ПараметрыДляПередачи,
		ЭтаФорма,
		,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеОтклоненияПриИзменении(Элемент)
	
	ОбновитьФлажки("ВсеОтклонения");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклоненияПоСуммеПриИзменении(Элемент)
	
	ОбновитьФлажки("ОтклоненияПоСумме");
	
КонецПроцедуры

&НаКлиенте
Процедура ЧекНеНайденПриИзменении(Элемент)
	
	ОбновитьФлажки("ЧекНеНайден");
	
КонецПроцедуры

&НаКлиенте
Процедура ЧекиАлкогольПриИзменении(Элемент)
	
	ОбновитьФлажки("ЧекиАлкоголь");
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНеЗаполненаПриИзменении(Элемент)
	
	ОбновитьФлажки("НоменклатураНеЗаполнена");
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОтбораДатаПриИзменении(Элемент)
	
	MRS_ИнтервалОтбора.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	НачалоПериода = MRS_ИнтервалОтбора.ДатаНачала;
	КонецПериода   = MRS_ИнтервалОтбора.КонецПериода;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сверить(Команда)
	
	СверитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеПоЧекам(Команда)
	
	Если ПроверкаЗаполнения() Тогда
		ДанныеПоЧекамНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбщиеНастройки(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ФормаОсновныеНастройкиЗавершение", ЭтотОбъект);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СписокКасс", СписокКасс);
	
	ОткрытьФорму("Обработка.MRS_ЗагрузкаДанныхИзФронтСистем.Форма.ОсновныеНастройки",
		СтруктураПараметров,
		ЭтаФорма,
		,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СравнитьСБазой(Команда)
	
	ОбновитьОтчетОСравнении();
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	ЗагрузитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДаты(Команда)
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ИнтервалОтбораПриИзмененииЗавершение", ЭтотОбъект);
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	Диалог.Период = MRS_ИнтервалОтбора;
	Диалог.Показать(ОбработчикОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаТаблицы Из Объект.ПараметрыКасс Цикл
		СтрокаТаблицы.Использовать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаТаблицы Из Объект.ПараметрыКасс Цикл
		СтрокаТаблицы.Использовать = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДатуЗапретаПодключения(Команда)
	
	ОткрытьФорму("Обработка.MRS_ЗагрузкаДанныхИзФронтСистем.Форма.ФормаУстановитьДатуЗапретаПодключения",
		,
		ЭтаФорма,
		УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СверитьНаСервере()
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ВсеОтклонения",           ВсеОтклонения);
	СтруктураОтбора.Вставить("ЧекНеНайден",             ЧекНеНайден);
	СтруктураОтбора.Вставить("ЧекиАлкоголь",            ЧекиАлкоголь);
	СтруктураОтбора.Вставить("ОтклоненияПоСумме",       ОтклоненияПоСумме);
	СтруктураОтбора.Вставить("НоменклатураНеЗаполнена", НоменклатураНеЗаполнена);
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПолучитьОтчетСверки(СтруктураОтбора);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Функция ПроверкаЗаполнения()
	
	Если СписокКасс.Количество()
		И ЗначениеЗаполнено(Период.ДатаНачала)
		И ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		Возврат Истина;
	Иначе
		ПоказатьПредупреждение(, "Не заполнен период или не выбран регистрационный номер");
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция НачатьВыполнениеПолученияДанныхПоЧекам()
	
	Дерево = РеквизитФормыВЗначение("ТаблицаДокументов");
	Дерево.Строки.Очистить();
	
	ПараметрыВыполненияОбработки = Новый Структура;
	ПараметрыВыполненияОбработки.Вставить("СписокКасс",      СписокКасс);
	ПараметрыВыполненияОбработки.Вставить("Период",          Период);
	ПараметрыВыполненияОбработки.Вставить("Дерево",          Дерево);
	ПараметрыВыполненияОбработки.Вставить("МассивСообщений", Новый Массив);
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ИмяОбработки",                "MRS_ЗагрузкаДанныхИзФронтСистем");
	ПараметрыЗадания.Вставить("ИмяМетода",                   "ПолучитьДанныеПоЧекам");
	ПараметрыЗадания.Вставить("ПараметрыВыполнения",         ПараметрыВыполненияОбработки);
	ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка",         Истина);
	ПараметрыЗадания.Вставить("ДополнительнаяОбработкаСсылка", Объект.ОбъектСсылка);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение данных от ЛКК'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
	
	ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки";
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗадания, ПараметрыВыполнения);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДерево(Строка)
	
	Дерево = ЗначениеИзСтрокиВнутр(Строка);
	ЗначениеВРеквизитФормы(Дерево, "ТаблицаДокументов");
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСообщенияПользователю(МассивСообщений)
	
	Для Каждого Сообщение Из МассивСообщений Цикл
		Сообщить(Сообщение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтчетОСравнении()
	
	Дерево = РеквизитФормыВЗначение("ТаблицаДокументов");
	Обработка = РеквизитФормыВЗначение("Объект");
	
	ОбщиеНастройки = Обработка.ВосстановитьОбщиеНастройки();
	НастройкиКасс = Обработка.ВосстановитьНастройкиКасс();
	
	ДокументыСписок = Новый СписокЗначений;
	Для Каждого День Из Дерево.Строки Цикл
		Для Каждого Документ Из День.Документы Цикл
			ДокументыСписок.Добавить(Документ.Значение);
		КонецЦикла;
	КонецЦикла;
	
	ДанныеПоДокументам = ПолучитьДанныеПоДокументамДляСравнения(ДокументыСписок);
	
	Макет = Обработка.ПолучитьМакет("Макет");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ТаблицаКасс = Новый ТаблицаЗначений;
	ТаблицаКасс.Колонки.Добавить("Касса");
	ТаблицаКасс.Колонки.Добавить("КассаРегНомер");
	ТаблицаКасс.Колонки.Добавить("Смена");
	ТаблицаКасс.Колонки.Добавить("ДатаОткрытияСмены");
	ТаблицаКасс.Колонки.Добавить("ДатаЗакрытияСмены");
	ТаблицаКасс.Колонки.Добавить("СуммаОФД",           Новый ОписаниеТипов("Число"));
	ТаблицаКасс.Колонки.Добавить("НДСОФД",             Новый ОписаниеТипов("Число"));
	ТаблицаКасс.Колонки.Добавить("КоличествоОФД",      Новый ОписаниеТипов("Число"));
	ТаблицаКасс.Колонки.Добавить("Сумма1С",            Новый ОписаниеТипов("Число"));
	ТаблицаКасс.Колонки.Добавить("НДС1С",              Новый ОписаниеТипов("Число"));
	ТаблицаКасс.Колонки.Добавить("Количество1С",       Новый ОписаниеТипов("Число"));
	ТаблицаКасс.Колонки.Добавить("СуммаРазница",       Новый ОписаниеТипов("Число"));
	ТаблицаКасс.Колонки.Добавить("НДСРазница",         Новый ОписаниеТипов("Число"));
	ТаблицаКасс.Колонки.Добавить("КоличествоРазница",  Новый ОписаниеТипов("Число"));
	ТаблицаКасс.Колонки.Добавить("РазделятьПоСменам",  Новый ОписаниеТипов("Булево"));
	
	ТаблицаСмен = ТаблицаКасс.Скопировать();
	
	Для Каждого День Из Дерево.Строки Цикл
		Для Каждого Касса Из День.Строки Цикл
			
			НастройкаТекущейКассы = НастройкиКасс.Получить(Касса.КассаРегНомер);
			Если НастройкаТекущейКассы = Неопределено Тогда
				НастройкаТекущейКассы = ОбщиеНастройки;
			КонецЕсли;
			
			СтрокаКасса = ТаблицаКасс.Найти(Касса.КассаРегНомер);
			Если СтрокаКасса = Неопределено Тогда
				СтрокаКасса = ТаблицаКасс.Добавить();
			КонецЕсли;
			
			СтрокаКасса.КассаРегНомер   = Касса.КассаРегНомер;
			СтрокаКасса.Касса           = Касса.Касса + ", рег. номер: " + Касса.КассаРегНомер;
			СтрокаКасса.РазделятьПоСменам = НастройкаТекущейКассы.РазделятьОтчетыПоСменам;
			
			Для Каждого Смена Из Касса.Строки Цикл
				
				СтрокаСмена = ТаблицаСмен.Добавить();
				СтрокаСмена.КассаРегНомер       = Касса.КассаРегНомер;
				СтрокаСмена.Смена               = Смена.НомерСмены;
				СтрокаСмена.ДатаОткрытияСмены   = Смена.ДатаСменыС;
				СтрокаСмена.ДатаЗакрытияСмены   = Смена.ДатаСменыПо;
				СтрокаСмена.СуммаОФД            = Смена.Сумма;
				СтрокаСмена.НДСОФД              = Смена.СуммаНДС;
				СтрокаСмена.КоличествоОФД       = Смена.Строки.Итог("Количество");
				СтрокаСмена.РазделятьПоСменам   = СтрокаКасса.РазделятьПоСменам;
				
				Документ = ?(Смена.Документы.Количество(), Смена.Документы[0].Значение, Неопределено);
				ДанныеПоДокументу = ДанныеПоДокументам.Найти(Документ);
				
				СтрокаСмена.Сумма1С         = 0;
				СтрокаСмена.НДС1С           = 0;
				СтрокаСмена.Количество1С    = 0;
				
				Если ДанныеПоДокументу <> Неопределено Тогда
					Если НастройкаТекущейКассы.РазделятьОтчетыПоСменам Тогда
						СтрокаСмена.Сумма1С         = ДанныеПоДокументу.Сумма;
						СтрокаСмена.НДС1С           = ДанныеПоДокументу.СуммаНДС;
						СтрокаСмена.Количество1С    = ДанныеПоДокументу.Количество;
					КонецЕсли;
				КонецЕсли;
				
				Если НастройкаТекущейКассы.РазделятьОтчетыПоСменам Тогда
					СтрокаСмена.СуммаРазница       = СтрокаСмена.Сумма1С - СтрокаСмена.СуммаОФД;
					СтрокаСмена.НДСРазница         = СтрокаСмена.НДС1С - СтрокаСмена.НДСОФД;
					СтрокаСмена.КоличествоРазница  = СтрокаСмена.Количество1С - СтрокаСмена.КоличествоОФД;
				КонецЕсли;
				
			КонецЦикла;
			
			Если НЕ НастройкаТекущейКассы.РазделятьОтчетыПоСменам Тогда
				Документ = ?(Касса.Документы.Количество(), Касса.Документы[0].Значение, Неопределено);
				ДанныеПоДокументу = ДанныеПоДокументам.Найти(Документ);
				Если ДанныеПоДокументу <> Неопределено Тогда
					СтрокаКасса.Сумма1С        = СтрокаКасса.Сумма1С + ДанныеПоДокументу.Сумма;
					СтрокаКасса.НДС1С          = СтрокаКасса.НДС1С + ДанныеПоДокументу.СуммаНДС;
					СтрокаКасса.Количество1С   = СтрокаКасса.Количество1С + ДанныеПоДокументу.Количество;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого Касса Из ТаблицаКасс Цикл
		
		СтрокиСмен = ТаблицаСмен.НайтиСтроки(Новый Структура("КассаРегНомер", Касса.КассаРегНомер));
		ОбластьКасса = Макет.ПолучитьОбласть("Касса");
		
		ТабДокСмены = Новый ТабличныйДокумент;
		
		Для Каждого Смена Из СтрокиСмен Цикл
			
			ОбластьСмена = Макет.ПолучитьОбласть("Смена");
			ЗаполнитьЗначенияСвойств(ОбластьСмена.Параметры, Смена);
			
			ТабДокСмены.Вывести(ОбластьСмена);
			
			Касса.СуммаОФД        = Касса.СуммаОФД + Смена.СуммаОФД;
			Касса.НДСОФД          = Касса.НДСОФД + Смена.НДСОФД;
			Касса.КоличествоОФД   = Касса.КоличествоОФД + Смена.КоличествоОФД;
			
			Если Смена.РазделятьПоСменам Тогда
				Касса.Сумма1С        = Касса.Сумма1С + Смена.Сумма1С;
				Касса.НДС1С          = Касса.НДС1С + Смена.НДС1С;
				Касса.Количество1С   = Касса.Количество1С + Смена.Количество1С;
			КонецЕсли;
			
		КонецЦикла;
		
		Касса.СуммаРазница       = Касса.Сумма1С - Касса.СуммаОФД;
		Касса.НДСРазница         = Касса.НДС1С - Касса.НДСОФД;
		Касса.КоличествоРазница  = Касса.Количество1С - Касса.КоличествоОФД;
		
		ЗаполнитьЗначенияСвойств(ОбластьКасса.Параметры, Касса);
		ТабличныйДокумент.Вывести(ОбластьКасса);
		ТабличныйДокумент.Вывести(ТабДокСмены);
		
	КонецЦикла;
	
	ОтчетОСравнении.Очистить();
	ОтчетОСравнении.Вывести(ТабличныйДокумент);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеПоДокументамДляСравнения(ДокументыСписок)
	
	// Швецов. Заполнить данные из базы
	Возврат Новый ТаблицаЗначений;
	
КонецФункции

&НаСервере
Процедура ДанныеПоЧекамНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ПараметрыВып = Новый Структура("Период, СписокКасс, МассивСообщений", Период, СписокКасс, Новый Массив);
	
	// Создаём адрес временного хранилища
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
	// Вызываем функцию обработки
	ОбработкаОбъект.ПолучитьДанныеПоЧекам(ПараметрыВып, АдресХранилища);
	
	// Получаем таблицу из хранилища
	ТаблицаZОтчетов = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	// Выводим сообщения
	ВывестиСообщенияПользователю(ПараметрыВып.МассивСообщений);
	
	// Формируем табличный документ
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = ОбработкаОбъект.ПолучитьМакет("Макет");
	
	// Выводим шапку
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	// Выводим строки
	ОбластьСтрока = Макет.ПолучитьОбласть("Смена");
	
	// Перебираем строки таблицы
	Для Каждого СтрокаТаблицы Из ТаблицаZОтчетов Цикл
		
		ОбластьСтрока.Параметры.Заполнить(СтрокаТаблицы);
		
		ОбластьСтрока.Параметры.ДатаОткрытияСмены = Формат(СтрокаТаблицы.ДатаОткрытия, "ДФ='dd.MM.yyyy HH:mm:ss'");
		ОбластьСтрока.Параметры.ДатаЗакрытияСмены = Формат(СтрокаТаблицы.ДатаЗакрытия, "ДФ='dd.MM.yyyy HH:mm:ss'");
		
		// Выводим заполненную область в табличный документ
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	// Помещаем табличный документ в реквизит формы
	ОтчетОСравнении = ТабличныйДокумент;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ДанныеИзХранилища = ОбработкаОбъект.ВосстановитьОбщиеНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборРегНомера(ДанныеВыбора, Параметры) Экспорт
	
	Если ДанныеВыбора <> Неопределено Тогда
		СписокКасс = ДанныеВыбора.Список;
		СохранитьСписокВыбора();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСписокВыбора()
	
	ХранилищеОбщихНастроек.Сохранить("MRS_ЗагрузкаДанныхИзФронтСистем", "СписокККТ_LKK", СписокКасс);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтруктуру(КорневаяСтрока, СоответствиеНаименований, Касса = Неопределено)
	
	Для Каждого Строка Из КорневаяСтрока.ПолучитьЭлементы() Цикл
		
		Если ЗначениеЗаполнено(Строка.КассаРегНомер) Тогда
			
			Касса = СоответствиеНаименований.Получить(Строка.КассаРегНомер);
			Если Касса = Неопределено Тогда
				Массив = Новый Массив;
				СоответствиеНаименований.Вставить(Строка.КассаРегНомер, Массив);
				Касса = СоответствиеНаименований.Получить(Строка.КассаРегНомер);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.НаименованиеЛКК) Тогда
			
			Если Касса.Найти(Строка.НаименованиеЛКК) = Неопределено Тогда
				Касса.Добавить(Строка.НаименованиеЛКК);
			КонецЕсли;
			
		КонецЕсли;
		
		ЗаполнитьСтруктуру(Строка, СоответствиеНаименований, Касса);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаОсновныеНастройкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Если Токен <> Результат.Токен Тогда
			Токен = Результат.Токен;
			СписокКасс.Очистить();
		КонецЕсли;
		
		РежимРазработчика = Результат.РежимРазработчика;
		
	КонецЕсли;
	
	ВосстановитьНастройки();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПараметрыФормы()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗагрузитьПараметрыФормы();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	Если НЕ MRS_Сервер.РольДоступнаВызовСервера("АдминистраторСистемы") Тогда
		Элементы.НастройкиПодключения.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ВыполнитьЗагрузкуДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОтбораПриИзмененииЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Если Период = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	MRS_ИнтервалОтбора = Период;
	Объект.НачалоПериода = MRS_ИнтервалОтбора.ДатаНачала;
	Объект.КонецПериода  = MRS_ИнтервалОтбора.ДатаОкончания;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФорму()
	
	ЗагрузитьПараметрыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФлажки(ИмяТекущегоФлажка)
	
	Если ЭтотОбъект[ИмяТекущегоФлажка] Тогда
		
		// Список всех флажков
		МассивФлажков = Новый Массив;
		МассивФлажков.Добавить("ОтклоненияПоСумме");
		МассивФлажков.Добавить("ЧекНеНайден");
		МассивФлажков.Добавить("ЧекиАлкоголь");
		МассивФлажков.Добавить("НоменклатураНеЗаполнена");
		
		Если ИмяТекущегоФлажка = "ВсеОтклонения" Тогда
			
			Для Каждого ИмяФлажка Из МассивФлажков Цикл
				ЭтотОбъект[ИмяФлажка] = Ложь;
			КонецЦикла;
			
		Иначе
			
			ЭтотОбъект.ВсеОтклонения = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти