
&НаКлиенте
Процедура Выбрать(Команда)

	Если НЕ ВыборНескольких Тогда 
		Строка = Элементы.ТаблицаККТ.ТекущиеДанные;
		Строка.Отметка = Истина;
	КонецЕсли;
	
	ВыборККТ(); 

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыборНескольких	 = ?(Параметры.Свойство("ВыборНескольких"),Параметры.ВыборНескольких,Истина);
	СписокКасс		 = ?(Параметры.Свойство("СписокКасс"),Параметры.СписокКасс,Неопределено);
	
	ЗаполнитьДеревоККТ();
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьДеревоККТ(УдалятьПустые=Истина)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДанныеПоККТ = ДокументОбъект.ClientKkts();  
	
	Если НЕ ДанныеПоККТ.Ошибка Тогда 
		ДанныеПоККТПолучитьНаСервере(ДанныеПоККТ,УдалятьПустые); 
	Иначе
		ВызватьИсключение ДанныеПоККТ.Описание;
	КонецЕсли;  
	
КонецПроцедуры

&НаСервере
Процедура ДанныеПоККТПолучитьНаСервере(ДанныеПоККТ,УдалятьПустые)

	Дерево = РеквизитФормыВЗначение("ТаблицаККТ"); 
	Дерево.Строки.Очистить();
	Если ДанныеПоККТ.Результат.Количество()	Тогда
		
		КорневаяСтрока = Дерево.Строки.Добавить();
		КорневаяСтрока.Организация	 = ДанныеПоККТ.Результат.kktList.orgName;
		
		ВеткаМагазина = ДанныеПоККТ.Результат.kktList.orgBranches[0];        
		
		ОбработатьВеткуМагазина(КорневаяСтрока,ВеткаМагазина);
		
		Если УдалятьПустые Тогда 
			УдалитьПустыеСтроки(Дерево);
		КонецЕсли;	
	КонецЕсли;	

	ЗначениеВРеквизитФормы(Дерево,"ТаблицаККТ");

КонецПроцедуры 

&НаСервере
Процедура ОбработатьВеткуМагазина(КорневаяСтрока,ВеткаМагазина)
	
	КорневаяСтрока.КартинкаАктивность = 3;
	Если ВеткаМагазина.kkts.Количество() Тогда
		Для каждого ККТ Из ВеткаМагазина.kkts Цикл
			УзелМагазина = КорневаяСтрока.Строки.Добавить();
			
			Если ККТ.Свойство("kktModel") Тогда 
				УзелМагазина.Модель	   	 = ККТ.kktModel; 
			КонецЕсли;
			УзелМагазина.РегНомер			 = ККТ.kktRegNumber;
			УзелМагазина.ИмяККТ				 = ККТ.kktName;
			УзелМагазина.КартинкаТип		 = 1;
			УзелМагазина.Счетчик			 = 1;
			
			Если ККТ.Свойство("kktLastSubscriptionDateTill") Тогда 
				УзелМагазина.ДатаОкончанияККТ			 = ПолучитьДату(ККТ.kktLastSubscriptionDateTill);
				УзелМагазина.ДатаСравненияОкончанияККТ	 = НачалоДня(ТекущаяДата()) + 2592000;
            КонецЕсли;
			
			КассаВыбрана = СписокКасс.НайтиПоЗначению(ККТ.kktRegNumber);
			Если КассаВыбрана <> Неопределено Тогда 
				УзелМагазина.Отметка = Истина;	
			КонецЕсли;
			
			Если ККТ.Свойство("license1CProcessing") Тогда 
				УзелМагазина.КартинкаАктивность = ККТ.license1CProcessing.active;
			КонецЕсли;
		КонецЦикла;
		КорневаяСтрока.Счетчик = КорневаяСтрока.Строки.Итог("Счетчик");
	КонецЕсли;
	
	Если ВеткаМагазина.branches.Количество() Тогда
		Для Каждого Ветка из ВеткаМагазина.branches Цикл 
			НоваяСтрока = КорневаяСтрока.Строки.Добавить();  
			НоваяСтрока.Узел = Ветка.branchName;  
			ОбработатьВеткуМагазина(НоваяСтрока,Ветка);
			НоваяСтрока.Счетчик = НоваяСтрока.Строки.Итог("Счетчик");
		КонецЦикла;
	КонецЕсли;
	
	КорневаяСтрока.Счетчик = КорневаяСтрока.Строки.Итог("Счетчик");

КонецПроцедуры   

&НаСервере
Функция ПолучитьДату(ДатаСтрока)
	Дата	 = Лев(ДатаСтрока,10);
	Дата	 = СтрРазделить(Дата,"-",Ложь);
	
	Если Дата.Количество() Тогда 
		Возврат Дата(Дата[0] + Дата[1] + Дата[2]);	
	Иначе
		Возврат Дата("00010101");
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УдалитьПустыеСтроки(СтрокаДерева)
	
	сч = СтрокаДерева.Строки.Количество();
	Пока сч > 0 Цикл
		КорневаяСтрока = СтрокаДерева.Строки[сч-1];
		Если КорневаяСтрока.Счетчик = 0 Тогда 
        	СтрокаДерева.Строки.Удалить(сч-1);
		Иначе
			УдалитьПустыеСтроки(КорневаяСтрока);
		КонецЕсли;
		сч = сч - 1;
	КонецЦикла;

КонецПроцедуры 


&НаКлиенте
Процедура ТаблицаККТВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = Ложь;
	
	Строка = ТаблицаККТ.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Значение = НЕ Строка.Отметка;
	
	УстановитьСнятьГалочки(ВыбраннаяСтрока,Значение);
	
КонецПроцедуры  

&НаКлиенте
Процедура ОтметкаПриИзменении(Элемент)
	
	УстановитьСнятьГалочки(Элементы.ТаблицаККТ.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьГалочки(ВыбраннаяСтрока,Отметка = Неопределено) 
	
	Строка = ТаблицаККТ.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Строка <> Неопределено Тогда
		Если ВыборНескольких Тогда
			Если Отметка = Неопределено Тогда 
				Отметка = Строка.Отметка;
			КонецЕсли;
			УстановитьСнятьГалочкиПоСтрокам(Отметка,Строка);
		Иначе
			Строка.Отметка = Истина;
			ВыборККТ();
		КонецЕсли;
	КонецЕсли;			

КонецПроцедуры   

&НаКлиенте
Процедура УстановитьСнятьГалочкиПоСтрокам(Отметка,КорневаяСтрока)

	КорневаяСтрока.Отметка = Отметка; 
	
	Для каждого Строка из КорневаяСтрока.ПолучитьЭлементы() Цикл
		УстановитьСнятьГалочкиПоСтрокам(Отметка,Строка) 
	КонецЦикла;

КонецПроцедуры 


&НаКлиенте
Процедура ВыборККТ()   
	
	СписокЗначений = Новый СписокЗначений;
	
	Для каждого КорневаяСтрока из ТаблицаККТ.ПолучитьЭлементы() Цикл  
		ДополнитьСписокККТ(СписокЗначений,КорневаяСтрока);
	КонецЦикла; 
	
	ПараметрыВыбора = Новый Структура("Список",СписокЗначений);
		
	ЭтаФорма.Закрыть(ПараметрыВыбора);  
	
КонецПроцедуры   

&НаКлиенте
Процедура ДополнитьСписокККТ(СписокЗначений,КорневаяСтрока)

	Если КорневаяСтрока.Отметка И ЗначениеЗаполнено(КорневаяСтрока.РегНомер) Тогда 
		СписокЗначений.Добавить(КорневаяСтрока.РегНомер,КорневаяСтрока.ИмяККТ);	
	КонецЕсли; 
	
	Для каждого Строка из КорневаяСтрока.ПолучитьЭлементы() Цикл
		ДополнитьСписокККТ(СписокЗначений,Строка);	
	КонецЦикла;

КонецПроцедуры 

&НаКлиенте
Процедура ПоказатьПустыеСтроки(Команда)
	ЗаполнитьДеревоККТ(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(Команда)
	ЭлементыТаблицы = ТаблицаККТ.ПолучитьЭлементы();
	Для каждого Строка из ЭлементыТаблицы Цикл
		Элементы.ТаблицаККТ.Развернуть(Строка.ПолучитьИдентификатор(),Истина);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДерево(Команда)
	ЭлементыТаблицы = ТаблицаККТ.ПолучитьЭлементы();
	Для каждого Строка из ЭлементыТаблицы Цикл
		Элементы.ТаблицаККТ.Свернуть(Строка.ПолучитьИдентификатор());
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПродлитьЛицензию(Команда)
	ВвестиСтроку("https://lk.platformaofd.ru/web/auth/billing/subscriptions/unpayed",,,Ложь);
КонецПроцедуры


